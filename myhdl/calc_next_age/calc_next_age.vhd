-- File: calc_next_age.vhd
-- Generated by MyHDL 0.8dev
-- Date: Sun Dec 16 22:44:22 2012


library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
use std.textio.all;

use work.pck_myhdl_08.all;

entity calc_next_age is
    port (
        age_out: out std_logic;
        live_count: in unsigned(3 downto 0);
        step: in std_logic;
        clock: in std_logic;
        reset: in std_logic
    );
end entity calc_next_age;


architecture MyHDL of calc_next_age is

signal age: std_logic;

begin




CALC_NEXT_AGE_SEQ: process (clock, reset) is
    variable survival: std_logic;
    variable birth: std_logic;
begin
    if (reset = '1') then
        age <= '0';
    elsif rising_edge(clock) then
        birth := stdl(live_count = 3);
        survival := stdl((live_count = 2) or (live_count = 3));
        if bool(step) then
            if ((age = '0') and bool(birth)) then
                age <= '1';
            elsif ((age = '1') and (not bool(survival))) then
                age <= '0';
            end if;
        end if;
    end if;
end process CALC_NEXT_AGE_SEQ;



age_out <= age;

end architecture MyHDL;
